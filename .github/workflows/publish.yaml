# This is a basic workflow to publish a new version of this package.
# It should be triggered on the creation of a new tag.
# It will update the package.json version and publish the package to npm.
# It will finally push a new commit to the master branch that includes the updated package.json version.
name: Publish Package

on:
    push:
        tags:
            - 'v*.*.*'

jobs:
    publish:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18.x'
                  registry-url: 'https://npm.pkg.github.com'
                  scope: '@flocasts'

            - name: Install dependencies
              run: npm ci
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.FLO_DEPLOY_PAT }}

            - name: Update package.json version
              run: |
                  # Remove the leading 'v' if it exists
                  newVersion=$(echo ${{ github.ref_name }} | tr -d "v")
                  currentVersion=$(jq -r .version package.json)

                  # Split the version numbers into major, minor, and patch
                  IFS='.' read -ra CURRENT <<< "$currentVersion"
                  IFS='.' read -ra NEW <<< "$newVersion"

                  # Compare the version numbers
                  for i in "${!CURRENT[@]}"; do
                      if [[ -z "${NEW[i]}" ]]; then
                          NEW[i]=0
                      fi

                      if (( CURRENT[i] > NEW[i] )); then
                          echo "New version number must be greater than the current version number"
                          exit 1
                      elif (( CURRENT[i] < NEW[i] )); then
                          break
                      fi
                  done

                  # Check if the package.json has a version number, if not, add one
                  if [ -z "$currentVersion" ]
                  then
                      jq --indent 4 ".version=\"$newVersion\"" package.json > tmp.$$.json && mv tmp.$$.json package.json
                  else
                      # Update the version number in package.json
                      jq --indent 4 ".version=\"$newVersion\"" package.json > tmp.$$.json && mv tmp.$$.json package.json
                  fi

                  echo "Updated package.json version to $newVersion"

            - name: Publish to npm
              run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Push updated package.json
              uses: stefanzweifel/git-auto-commit-action@v5
              with:
                  branch: master
                  commit_message: 'Update package.json version to ${{ github.ref_name }}'
                  commit_options: '--no-verify'
                  commit_user_name: 'GitHub Actions'
